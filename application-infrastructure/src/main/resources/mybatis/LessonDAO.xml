<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lecture.infr.dao.LessonDAO">
    <select id="getLessonsByCondition" resultType="com.lecture.domain.entities.LessonDO">
        SELECT *
        FROM lesson
        <where>
            closed = 0
            <if test="query.campusId != null">
                and campus_id = #{query.campusId}
            </if>
            <if test="query.required != null">
                and required = #{query.required}
            </if>
            <if test="query.lessonName != null">
                and name LIKE CONCAT('%',#{query.lessonName},'%')
            </if>
            <if test="query.teacherName != null">
                and teacher_name LIKE CONCAT('%', #{query.teacherName}, '%')
            </if>
            <if test="query.collegeId != null">
                and college_id = #{query.collegeId}
            </if>
            <if test="query.weekday != null">
                and weekday = #{query.weekday}
            </if>
            <if test="query.majorId != null">
                and major_id = #{query.majorId}
            </if>
        </where>
        ORDER BY l_id
    </select>
    <select id="getLessonIdByStudentId" resultType="java.lang.Integer">
        select l_id
        from student_lesson
        where delete_flag = 0 and stu_id = #{studentId}
    </select>

    <select id="getLessonCount" resultType="java.lang.Integer">
        select COUNT(*)
        from lesson
        where closed = 0
    </select>

    <select id="getStudentByLessonId" resultType="com.lecture.domain.entities.StudentDO">
        select stu_id, name
        from student
        where stu_id in (
            select stu_id
            from student_lesson
            where l_id = #{lessonId} and delete_flag = 0
        )
    </select>

    <insert id="selectLesson">
        INSERT
        INTO student_lesson(stu_id,l_id)
        VALUES(#{stuId},#{lessonId})
    </insert>

    <update id="dropLesson">
        UPDATE student_lesson
        SET delete_flag = 1
        WHERE stu_id = #{stuId} and l_id = #{lessonId}
    </update>


    <update id="decrLesson">
        update lesson
        set remain_people = remain_people - 1
        where l_id = #{lessonId}
    </update>

    <update id="incrLesson">
        update lesson
        set remain_people = remain_people + 1
        where l_id = #{lessonId}
    </update>

    <update id="closeLesson">
        UPDATE lesson
        SET closed = 1
        WHERE (total_people - remain_people) &lt; 20
    </update>

    <update id="dropLessonByClose">
        UPDATE student_lesson
        SET delete_flag = 1
        <if test="list != null and list.size() > 0">
            where l_id in
            <foreach collection="list" open="(" close=")" item="id" separator=",">
                #{id}
            </foreach>
        </if>
    </update>

    <update id="closeLessons">
        UPDATE lesson
        SET closed = 1
        <if test="list != null and list.size() > 0">
            where l_id in
            <foreach collection="list" open="(" close=")" item="id" separator=",">
                #{id}
            </foreach>
        </if>
    </update>

    <update id="closeLessonByTeacher">
        UPDATE lesson
        SET closed = 1
        WHERE l_id = #{lessonId} and t_id = #{teacherId}
    </update>

    <update id="closeStudentLessonByTeacher">
        update student_lesson
        set delete_flag = 1
        where l_id = #{lessonId}
    </update>

</mapper>